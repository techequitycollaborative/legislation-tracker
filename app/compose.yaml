# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "streamlit_app".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  streamlit_app: # Name of the app
    build:
      context: .
      dockerfile: Dockerfile # Name of dockerfile in the repo
    image: leg-tracker:latest  # Name and optional tag for the image
    ports:
      - 8501:8501
    volumes:
    - .streamlit:/app/.streamlit # copies files from .streamlit folder to container
    - ./:/app # copies files from /app folder to container
    environment:
      - ENV=development
    command: streamlit run /app/streamlit_app.py # command to launch app



# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
#    depends_on:
#       db:
#         condition: service_healthy
#  db:
#     image: postgres
#     restart: always
  #   user: doadmin
#     secrets:
#       - db-password
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
#    environment:
#       - POSTGRES_DB=legtracker
#       - POSTGRES_USER=doadmin
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#volumes:
#   db-data:

#secrets:
#   db-password:
#     file: db/password.txt